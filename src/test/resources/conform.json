[{"type": "comment", "value": "Barrister conformance IDL\n\nThe bits in here have silly names and the operations\nare not intended to be useful.  The intent is to\nexercise as much of the IDL grammar as possible"}, {"comment": "", "values": [{"comment": "", "value": "ok"}, {"comment": "", "value": "err"}], "type": "enum", "name": "Status"}, {"comment": "", "values": [{"comment": "", "value": "add"}, {"comment": "", "value": "multiply"}], "type": "enum", "name": "MathOp"}, {"comment": "", "extends": "", "type": "struct", "name": "Response", "fields": [{"comment": "", "optional": false, "is_array": false, "type": "Status", "name": "status"}]}, {"comment": "testing struct inheritance", "extends": "Response", "type": "struct", "name": "RepeatResponse", "fields": [{"comment": "", "optional": false, "is_array": false, "type": "int", "name": "count"}, {"comment": "", "optional": false, "is_array": true, "type": "string", "name": "items"}]}, {"comment": "", "extends": "", "type": "struct", "name": "HiResponse", "fields": [{"comment": "", "optional": false, "is_array": false, "type": "string", "name": "hi"}]}, {"comment": "", "extends": "", "type": "struct", "name": "RepeatRequest", "fields": [{"comment": "", "optional": false, "is_array": false, "type": "string", "name": "to_repeat"}, {"comment": "", "optional": false, "is_array": false, "type": "int", "name": "count"}, {"comment": "", "optional": false, "is_array": false, "type": "bool", "name": "force_uppercase"}]}, {"comment": "", "extends": "", "type": "struct", "name": "Person", "fields": [{"comment": "", "optional": false, "is_array": false, "type": "string", "name": "personId"}, {"comment": "", "optional": false, "is_array": false, "type": "string", "name": "firstName"}, {"comment": "", "optional": false, "is_array": false, "type": "string", "name": "lastName"}, {"comment": "", "optional": true, "is_array": false, "type": "string", "name": "email"}]}, {"comment": "", "functions": [{"comment": "returns a+b", "returns": {"optional": false, "is_array": false, "type": "int"}, "params": [{"is_array": false, "type": "int", "name": "a"}, {"is_array": false, "type": "int", "name": "b"}], "name": "add"}, {"comment": "performs the given operation against \nall the values in nums and returns the result", "returns": {"optional": false, "is_array": false, "type": "float"}, "params": [{"is_array": true, "type": "float", "name": "nums"}, {"is_array": false, "type": "MathOp", "name": "operation"}], "name": "calc"}, {"comment": "returns the square root of a", "returns": {"optional": false, "is_array": false, "type": "float"}, "params": [{"is_array": false, "type": "float", "name": "a"}], "name": "sqrt"}, {"comment": "Echos the req1.to_repeat string as a list,\noptionally forcing to_repeat to upper case\n\nRepeatResponse.items should be a list of strings\nwhose length is equal to req1.count", "returns": {"optional": false, "is_array": false, "type": "RepeatResponse"}, "params": [{"is_array": false, "type": "RepeatRequest", "name": "req1"}], "name": "repeat"}, {"comment": "returns a result with:\n  hi=\"hi\" and status=\"ok\"", "returns": {"optional": false, "is_array": false, "type": "HiResponse"}, "params": [], "name": "say_hi"}, {"comment": "returns num as an array repeated 'count' number of times", "returns": {"optional": false, "is_array": true, "type": "int"}, "params": [{"is_array": false, "type": "int", "name": "num"}, {"is_array": false, "type": "int", "name": "count"}], "name": "repeat_num"}, {"comment": "simply returns p.personId\n\nwe use this to test the '[optional]' enforcement, \nas we invoke it with a null email", "returns": {"optional": false, "is_array": false, "type": "string"}, "params": [{"is_array": false, "type": "Person", "name": "p"}], "name": "putPerson"}], "type": "interface", "name": "A"}, {"comment": "a second interface to prove that the server dispatcher\nunderstands how to distinguish between interfaces in a contract", "functions": [{"comment": "simply returns s \nif s == \"return-null\" then you should return a null ", "returns": {"optional": true, "is_array": false, "type": "string"}, "params": [{"is_array": false, "type": "string", "name": "s"}], "name": "echo"}], "type": "interface", "name": "B"}, {"barrister_version": "0.1.0", "type": "meta", "date_generated": 1334261700516, "checksum": "34f6238ed03c6319017382e0fdc638a7"}]